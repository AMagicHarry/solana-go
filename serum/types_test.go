package serum

import (
	"bytes"
	"encoding/base64"
	"encoding/hex"
	"encoding/json"
	"fmt"
	"os"
	"testing"

	"github.com/lunixbochs/struc"
	"github.com/stretchr/testify/require"
)

//func TestOrderbook_Items(t *testing.T) {
//	f, err := os.Open("testdata/ob_7MKN7XKzPae1j6kGgY7mHa2MhadjZtYtQD6XXsjUAyBu.json")
//	require.NoError(t, err)
//	defer f.Close()
//
//	var ob Orderbook
//	dec := json.NewDecoder(f)
//	err = dec.Decode(&ob)
//	require.NoError(t, err)
//	fmt.Println("-----")
//
//	ob.Items(true, func(node SlackLeafNode) error {
//		fmt.Println("-----")
//		cnt, _ := json.MarshalIndent(node, "", "  ")
//		fmt.Println(string(cnt))
//		return nil
//	})
//}

// func getMarket(t *testing.T, marketAddr solana.PublicKey) *MarketV2 {
// 	c := rpc.NewClient("http://api.mainnet-beta.solana.com:80/rpc")
// 	pubKey := solana.MustPublicKeyFromBase58("7xLk17EQQ5KLDLDe44wCmupJKJjTGd8hs3eSVVhCx932")
// 	accInfo, err := c.GetAccountInfo(context.Background(), pubKey)
// 	require.NoError(t, err)

// 	accountData, err := accInfo.Value.DataToBytes()
// 	require.NoError(t, err)

// 	var m MarketV2
// 	require.NoError(t, struc.Unpack(bytes.NewReader(accountData), &m))
// 	return &m
// }

func TestOrderbook_Items_2(t *testing.T) {
	//market := getMarket(t, solana.MustPublicKeyFromBase58("7xLk17EQQ5KLDLDe44wCmupJKJjTGd8hs3eSVVhCx932"))
	ob := Orderbook{
		SerumPadding: [5]byte{0x73, 0x65, 0x72, 0x75, 0x6d},
		AccountFlags: 33,  // 0b100001
		BumpIndex:    101, // 65000000
		ZeroPaddingA: [4]byte{0x00, 0x00, 0x00, 0x00},
		FreeListLen:  64, // 40000000
		ZeroPaddingB: [4]byte{0x00, 0x00, 0x00, 0x00},
		FreeListHead: 19, //13000000
		Root:         0,  //
		LeafCount:    19, //13000000
		ZeroPaddingC: [4]byte{0x00, 0x00, 0x00, 0x00},
		Nodes:        []SlabNode{},
	}
	rawSlabs := []string{
		"0100000035000000010babffffffffff4105000000000000400000003f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003a000000f3cea5ffffffffff2807000000000000510000005200000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003b000000fbe5a5fffffffffff4060000000000004f0000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000014060000b2cea5ffffffffff23070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670e62c000000000000140b0fadcf8fcebf",
		"010000003e00000027c7a5ffffffffff27070000000000005b0000005c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000006200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003d000000c6c6a5ffffffffff2c07000000000000150000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003d00000053c7a5ffffffffff2507000000000000070000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003f000000c7c6a5ffffffffff2a07000000000000560000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"020000000206000037c7a5ffffffffff29070000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d11027000000000000dd7d17400dff4416",
		"030000001400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003e00000013c7a5ffffffffff2b07000000000000120000001100000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000006060000c6c6a5ffffffffff2c070000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d1b80b000000000000692a447127ff4416",
		"030000001800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"02000000040600008fe2a5fffffffffff9060000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670543a0000000000009d9e9f3d8521b2d9",
		"02000000150600007bc9a5fffffffffff9060000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db6700a9e00000000000002e3dd65b64764c0",
		"040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000001b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003c000000b3d5a5ffffffffff0207000000000000600000005f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003f00000051cfa5ffffffffff1507000000000000290000002a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000001f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000004060000c8c6a5ffffffffff2b070000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d1881300000000000063632d6527ff4416",
		"0200000002060000f5c6a5ffffffffff2b070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db6702603000000000000da789330b8627df5",
		"030000006400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000007060000ffdca5ffffffffff14070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670a13b0000000000009e163e1037b5e8e4",
		"020000000006000051cfa5ffffffffff15070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670d0530000000000006779d60ba4be17cf",
		"0200000001000000b6eba6ffffffffff6400000000000000d3d8cf9f860bc79e5df6ca11f809788718e405e3e423f2fd5dcf695f68c6958c01000000000000000000000000000000",
		"02000000000000007e50a7ffffffffffc800000000000000d3d8cf9f860bc79e5df6ca11f809788718e405e3e423f2fd5dcf695f68c6958c01000000000000000000000000000000",
		"030000000f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000008060000bedea5ffffffffffe3060000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670055b0000000000001113ad3f9a5837d0",
		"02000000090600002bd0a5ffffffffffea060000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db67080b300000000000012f8a9f3c816eca9",
		"030000004400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000002600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0100000037000000dcdda5ffffffffff0007000000000000020000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"01000000360000007e50a7ffffffffffc8000000000000004b0000004c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000001700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0100000038000000b6eba6ffffffffff64000000000000002b0000002c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000000000000fdcbabffffffffff6603000000000000a1cf8f45642a149ea2980902e3afdde39dff9b8a4bce9ff62097bbf7391c1c6400230200000000000000000000000000",
		"030000005300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000004d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003c000000fee4a5ffffffffffe706000000000000350000003600000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"01000000720000007bc9a5fffffffffff9060000000000001a0000001900000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003b000000c9d8a5ffffffffff08070000000000001d0000001e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000003c000000fcc9a5ffffffffff2b070000000000000e0000000d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"010000007a000000c8c6a5ffffffffff2b07000000000000210000002200000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"0200000005060000c7c6a5ffffffffff2a070000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d110270000000000009a1d3a6527ff4416",
		"030000005800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000003b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"020000000106000053c7a5ffffffffff25070000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d1204e000000000000a267017f0aff4416",
		"020000000306000027c7a5ffffffffff27070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db67017330000000000008b1a52ba3fcfc1f4",
		"030000001c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"020000000f060000c9d8a5ffffffffff08070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db6700687000000000000f80eeeb04ac783af",
		"020000000a060000b3d5a5ffffffffff02070000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db6701082000000000000d48f570ec5a541b8",
		"030000000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000006100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000005e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
		"030000006300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
	}

	for _, rawSlab := range rawSlabs {
		slabDataBytes, err := hex.DecodeString(rawSlab[8:])
		require.NoError(t, err)

		node := SlabNode{
			Blob: slabDataBytes,
		}

		switch rawSlab[0:2] {
		case "01":
			node.Type = 1
		case "02":
			node.Type = 2
		case "03":
			node.Type = 3
		}

		ob.Nodes = append(ob.Nodes, node)
	}
	cnt, _ := json.MarshalIndent(ob, "", "  ")
	f, _ := os.Create("testdata/ob_7MKN7XKzPae1j6kGgY7mHa2MhadjZtYtQD6XXsjUAyBu.json")
	f.Write(cnt)
	f.Close()

	ob.Items(true, func(node *SlabLeafNode) error {
		cnt, _ := json.MarshalIndent(node, "", "  ")
		fmt.Println(string(cnt))
		return nil
	})
}

func TestMarketDecode(t *testing.T) {
	tests := []struct {
		name       string
		base64Data string
	}{
		{
			name:       "Serum Market SOL/USDT",
			base64Data: `c2VydW0DAAAAAAAAAGdTY0MQ+JzjRQitPPQw7a6jFaO3QEtNbJqFwHlHoaDdAAAAAAAAAAAGm4hX/quBhPtof2NGGMA12sQ53BrrO1WYoPAAAAAAAZqhgojuhD2D9j0JH/1UU78OyY17yIzxSctOkEdQqtVn3J9Uzkd6sWTIS0jwubpXWBCWAdTAPAO1WBTXCUKhAiUA8Vb/JRoAAAAAAAAAAAAAe3KroxoWcpqkx0i8u5vTEf6p3L/ywwDq7Ktzy9emFhswTe1qDgAAAMiPz0sAAAAAZAAAAAAAAADe8TmrC1DwGtEuKniQQk1igbzy3FWrl5XOfqClpgrXPn8QBfRYuHutaT3LATJRSLiB32YOH7aWMK3FLYuxLSTFXlqAgmTHudbh5oQuYmowZgURANtyvD/GmOSv6N1nBjDpvaPvZD875suiOGn2gX+hOv6zwukfAaxjJxOl1QIRVQDh9QUAAAAAZAAAAAAAAAAAAAAAAAAAAPdrAgAAAAAAcGFkZGluZw==`,
		},
		{
			name:       "Serum Market BTC/USDT",
			base64Data: `c2VydW0DAAAAAAAAAMkKiCV+BzIn+sJYhlwIadcO1RsGyzQqZIxRXpbrnlvdBAAAAAAAAACCaOmpoURMK6XHelGTaFawcuQ/78/15LAemWI8jrt3SZqhgojuhD2D9j0JH/1UU78OyY17yIzxSctOkEdQqtVnnEl8Xs+n55Pa5vkiMJZTUuaTG8Ln42qiQ3quf3u9iEII730NAAAAAAAAAAAAAAAAmFWvLXLHYemX2NKFZGObJERi1B1a5J4SWL6RHtHMSPmxZBUZ1AIAADUi18kGAAAAZAAAAAAAAADg3qPjy8M+a6VDYBy7OXcKovbURbEJeC8VMa1endPpxlo3MH4ZwVF7E7aeSp7Pl/vSr0LbloZvrioosja+TvVcEUdLxc0rHbDU0AeNO1laPk4J9MOXE3y0k17hBk+haj7IORaSFofBu0PECdiYYFjOIFelkbz9cSyksYvZX9NhV2QAAAAAAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGFkZGluZw==`,
		},
	}

	for _, test := range tests {
		t.Run(test.name, func(t *testing.T) {
			cnt, err := base64.StdEncoding.DecodeString(test.base64Data)
			require.NoError(t, err)

			var m MarketV2
			require.NoError(t, struc.Unpack(bytes.NewReader(cnt), &m))

			cnt, _ = json.MarshalIndent(m, "", "  ")
			fmt.Println(string(cnt))
		})
	}
}

//func TestOrderDecode(t *testing.T) {
//	cnt, err := ioutil.ReadFile("/tmp/orders")
//	require.NoError(t, err)
//	//hexData := `736572756d2100000000000000650000000000000044000000000000004c0000000000000011000000000000000100000035000000010babffffffffff4105000000000000400000003f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000007060000e92ba8ffffffffff6a050000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d18813000000000000c6a1933c53bc44160200000003060000ad2ba8ffffffffff6b050000000000005b4388a3431832af5742b863e200b8e733ce451f27006e2723d9198b363355d18813000000000000f49ba2465bbca8ffffffffff66050000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db6705246000000000000c837c70ea5737ca70200000013060000e234a8ffffffffff67050000000000005ae01b52d00a090c6dc6fce8e37a225815cff2223a99c6dfdad5aae56d3db670e367000000000000b1223a1fe53f3899030000006200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000000c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030000003200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000003d000000965ca8ffffffffff600500`
//	// cnt, err := hex.DecodeString(hexData)
//	// require.NoError(t, err)
//
//	var o Orderbook
//	require.NoError(t, struc.Unpack(bytes.NewReader(cnt), &o))
//
//	cnt, _ = json.MarshalIndent(o, "", "  ")
//	fmt.Println(string(cnt))
//
//	for idx, n := range o.Nodes {
//		fmt.Println("idx", idx)
//		el, err := n.Variant()
//		require.NoError(t, err)
//		out, _ := json.MarshalIndent(el, "", "  ")
//		fmt.Println(string(out))
//	}
//}
